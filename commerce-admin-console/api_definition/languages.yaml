swagger: '2.0'
info:
  version: '2.0'
  title: languages
consumes:
  - application/json
produces:
  - application/json
paths:
  /languages:
    get:
      tags:
        - languages
      description: Get a collection of languages.
      operationId: getLanguages
      parameters:
        - name: id
          in: query
          description: 'The language ID. When creating new languages, use negative values less than -999.'
          required: false
          type: integer
          format: int32
        - name: localeName
          in: query
          description: 'A Java locale used to represent a political, geographical, or cultural region that has a distinct language and customs. This is a mandatory field.'
          required: false
          type: string
        - name: language
          in: query
          description: Language component of the locale.
          required: false
          type: string
        - name: country
          in: query
          description: Country or region component of the locale.
          required: false
          type: string
        - name: variant
          in: query
          description: 'Variant component of the locale. Used to specify the locale encoding character set or to further segregate a distinct formatting custom for a political, geographical, or cultural region.'
          required: false
          type: string
        - name: encoding
          in: query
          description: The character encoding value that the browser uses to display the page in the selected language.
          required: false
          type: string
        - name: mimeCharSet
          in: query
          description: The MIME character encoding value that the notification system uses to encode a message for the selected language.
          required: false
          type: string
        - name: offset
          in: query
          description: 'The position within the resulting dataset where the query begins returning item records. If the offset is "5", the records that returned begin with the sixth record that matches the query parameters. If the offset is "0", the records that are returned begin with the first record that matches the query parameters.'
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of records to return.
          required: false
          type: integer
          format: int32
        - name: fields
          in: query
          description: 'The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.'
          required: false
          type: string
        - name: expand
          in: query
          description: 'The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.'
          required: false
          type: string
        - name: sort
          in: query
          description: 'The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.'
          required: false
          type: string
      responses:
        '200':
          description: A collection of languages.
          schema:
            $ref: '#/definitions/LanguageCollection'
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    post:
      tags:
        - languages
      description: Create a language.
      operationId: createLanguage
      parameters:
        - in: body
          name: Language
          description: The language.
          required: true
          schema:
            $ref: '#/definitions/Language'
      responses:
        '201':
          description: The operation was successful.
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
  '/languages/{id}':
    get:
      tags:
        - languages
      description: Get a language.
      operationId: getLanguageById
      parameters:
        - name: fields
          in: query
          description: 'The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.'
          required: false
          type: string
        - name: expand
          in: query
          description: 'The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.'
          required: false
          type: string
        - name: sort
          in: query
          description: 'The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.'
          required: false
          type: string
      responses:
        '200':
          description: The language.
          schema:
            $ref: '#/definitions/Language'
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '404':
          description: The resource was not found.
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    delete:
      tags:
        - languages
      description: Delete a language.
      operationId: deleteLanguageById
      parameters: []
      responses:
        '204':
          description: The operation was successful.
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '404':
          description: The resource was not found.
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    patch:
      tags:
        - languages
      description: Update a language.
      operationId: updateLanguageById
      parameters:
        - in: body
          name: Language
          description: The language.
          required: true
          schema:
            $ref: '#/definitions/Language'
      responses:
        '200':
          description: The operation was successful.
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '404':
          description: The resource was not found.
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    parameters:
      - name: id
        in: path
        description: 'The language ID. When creating new languages, use negative values less than -999.'
        required: true
        type: integer
        format: int32
  '/languages/{id}/descriptions':
    get:
      tags:
        - languages
      description: ''
      operationId: getDescriptionsOfLanguage
      parameters:
        - name: offset
          in: query
          description: 'The position within the resulting dataset where the query begins returning item records. If the offset is "5", the records that returned begin with the sixth record that matches the query parameters. If the offset is "0", the records that are returned begin with the first record that matches the query parameters.'
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of records to return.
          required: false
          type: integer
          format: int32
        - name: fields
          in: query
          description: 'The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.'
          required: false
          type: string
        - name: expand
          in: query
          description: 'The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.'
          required: false
          type: string
        - name: sort
          in: query
          description: 'The comma-separated set of properties which controls the order of the items being listed, prefixed by either (-) to sort by descending order, or optionally (+) to sort by ascending order. For example, sort=name,-d which means, order the items based on the name value in ascending order, then by the id value in descending order.'
          required: false
          type: string
      responses:
        '200':
          description: A collection of languages descriptions.
          schema:
            $ref: '#/definitions/LanguageDescriptionCollection'
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    parameters:
      - name: id
        in: path
        description: 'The language ID. When creating new languages, use negative values less than -999.'
        required: true
        type: integer
        format: int32
definitions:
  Link:
    type: object
    properties:
      href:
        type: string
        format: uri
        description: The URL of the link.
    description: Links to related resources.
  Error:
    type: object
    properties:
      code:
        type: string
        description: The error message code.
      message:
        type: string
        description: The error message.
      messageKey:
        type: string
        description: The error message key.
      messageArguments:
        type: array
        description: The arguments used to construct the error message.
        items:
          type: object
      correlationId:
        type: string
        description: The unique identifier for the request.
      locale:
        type: string
        description: The locale of the error message.
    description: The error message item model.
  ErrorResponseContainer:
    type: object
    properties:
      requestId:
        type: string
        description: The request identifier.
      errors:
        type: array
        description: The errors.
        items:
          $ref: '#/definitions/Error'
    description: The error message model.
  Language:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: 'The language ID. When creating new languages, use negative values less than -999.'
      localeName:
        type: string
        description: 'A Java locale used to represent a political, geographical, or cultural region that has a distinct language and customs. This is a mandatory field.'
      language:
        type: string
        description: Language component of the locale.
      country:
        type: string
        description: Country or region component of the locale.
      variant:
        type: string
        description: 'Variant component of the locale. Used to specify the locale encoding character set or to further segregate a distinct formatting custom for a political, geographical, or cultural region.'
      encoding:
        type: string
        description: The character encoding value that the browser uses to display the page in the selected language.
      mimeCharSet:
        type: string
        description: The MIME character encoding value that the notification system uses to encode a message for the selected language.
      links:
        type: object
        description: Links to related resources.
        properties:
          descriptions:
            type: object
            description: The language description relationships of a language.
            properties:
              href:
                type: string
                description: The URL of the link.
    description: The language.
  LanguageCollection:
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: The total number of items.
      items:
        type: array
        description: The items.
        items:
          $ref: '#/definitions/Language'
    description: A collection of languages.
  LanguageDescription:
    type: object
    properties:
      descriptionLanguageId:
        type: integer
        format: int32
        description: The language ID of the language that is being described.
      description:
        type: string
        description: 'The description of the language that is displayed in a graphical user interface, which manages supported languages for a StoreEntity.'
      languageId:
        type: integer
        format: int32
        description: The language ID.
    description: Language Description
  LanguageDescriptionCollection:
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: The total number of items.
      items:
        type: array
        description: The items.
        items:
          $ref: '#/definitions/LanguageDescription'
    description: A collection of languages descriptions.
