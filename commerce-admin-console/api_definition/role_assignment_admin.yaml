host: hostname.com
basePath: /rest/admin/v2
schemes:
  - https
swagger: '2.0'
info:
  version: '2.0'
  title: role-assignments
tags:
  - name: Role Assignments
    description: This class provides RESTful services to assign or unassign role to a user or organization. It can also get the roles for a user or organization. The roles assigned to an organization specify which roles a user could potentially be assigned for that organization.
paths:
  /role-assignments:
    get:
      tags:
        - Role Assignments
      description: Get a collection of role assignments.
      operationId: getRoleAssignments
      parameters:
        - name: memberId
          in: query
          description: The unique numeric ID for identifying the user or organization of the member that has a role.
          required: false
          type: integer
          format: int64
        - name: roleId
          in: query
          description: The unique numeric ID for identifying the role.
          required: false
          type: integer
          format: int32
        - name: organizationId
          in: query
          description: The unique numeric ID for identifying the organization where the role is being played.
          required: false
          type: integer
          format: int64
        - name: offset
          in: query
          description: 'The position within the resulting dataset where the query begins returning item records. If the offset is "5", the records that returned begin with the sixth record that matches the query parameters. If the offset is "0", the records that are returned begin with the first record that matches the query parameters.'
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of records to return.
          required: false
          type: integer
          format: int32
        - name: fields
          in: query
          description: 'The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.'
          required: false
          type: string
        - name: expand
          in: query
          description: 'The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.'
          required: false
          type: string
      responses:
        '200':
          description: A collection of role assignments.
          schema:
            $ref: '#/definitions/RoleAssignmentCollection'
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
      summary: Get a collection of role assignments.
    post:
      responses:
        '201':
          description: The requested resource has been created.
          headers:
            Location:
              description: Link to the newly created resource.
              type: string
        '400':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: Bad request. The request could not be understood by the server due to malformed syntax.
        '401':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: Not authenticated. The user session is not valid.
        '403':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: The user is not authorized to perform the specified request.
        '500':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: 'Internal server error. For details, see the server log files.'
      parameters:
        - required: true
          name: body
          in: body
          description: Request body.
          schema:
            $ref: '#/definitions/RoleAssignment'
      tags:
        - Role Assignments
      description: Create a role assignment.
      produces:
        - application/json
      summary: Create a role assignment.
      consumes:
        - application/json
      operationId: RoleAssignment-createRoleAssignment
  '/role-assignments/memberId:{memberId},roleId:{roleId},organizationId:{organizationId}':
    get:
      tags:
        - Role Assignments
      description: Get a role assignment.
      operationId: getRoleAssignmentById
      parameters:
        - name: memberId
          in: path
          description: The unique numeric ID for identifying the user or organization of the member that has a role.
          required: true
          type: integer
          format: int64
        - name: roleId
          in: path
          description: The unique numeric ID for identifying the role.
          required: true
          type: integer
          format: int32
        - name: organizationId
          in: path
          description: The unique numeric ID for identifying the organization where the role is being played.
          required: true
          type: integer
          format: int64
        - name: fields
          in: query
          description: 'The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.'
          required: false
          type: string
        - name: expand
          in: query
          description: 'The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.'
          required: false
          type: string
      responses:
        '200':
          description: The role assignment.
          schema:
            $ref: '#/definitions/RoleAssignment'
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '404':
          description: The resource was not found.
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
      summary: Get a role assignment.
    delete:
      responses:
        '204':
          description: The requested resource has been deleted.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: Bad request. The request could not be understood by the server due to malformed syntax.
        '401':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: Not authenticated. The user session is not valid.
        '403':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: The user is not authorized to perform the specified request.
        '500':
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
          description: 'Internal server error. For details, see the server log files.'
      parameters:
        - required: true
          name: memberId
          type: integer
          format: int64
          description: The unique numeric ID for identifying the user or organization of the member that has a role.
          in: path
        - required: true
          name: organizationId
          type: integer
          format: int64
          description: The unique numeric ID for identifying the organization where the role is being played.
          in: path
        - required: true
          name: roleId
          type: integer
          format: int32
          description: The unique numeric ID for identifying the role.
          in: path
      tags:
        - Role Assignments
      description: Delete a role assignment.
      produces:
        - application/json
      summary: Delete a role assignment.
      operationId: RoleAssignment-deleteRoleAssignment
definitions:
  ErrorResponseContainer:
    description: The error message model.
    properties:
      errors:
        items:
          $ref: '#/definitions/Error'
        type: array
      requestId:
        description: The request identifier.
        type: string
  Error:
    description: The error message item model.
    properties:
      code:
        description: The error message code.
        type: string
      correlationId:
        description: The unique identifier for the request.
        type: string
      locale:
        description: The locale of the error message.
        type: string
      message:
        description: The error message.
        type: string
      messageArguments:
        description: The arguments used to construct the error message.
        items: {}
        type: array
      messageKey:
        description: The error message key.
        type: string
  RoleAssignmentCollection:
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: The total number of items.
      items:
        type: array
        description: The items.
        items:
          $ref: '#/definitions/RoleAssignment'
    description: A collection of role assignments.
  RoleAssignment:
    description: A role assigned to a user or to an organization.
    properties:
      memberId:
        type: integer
        format: int64
        description: The unique numeric ID for identifying the user or organization of the member that has a role.
      organizationId:
        type: integer
        format: int64
        description: The unique numeric ID for identifying the organization where the role is being played.
      roleId:
        type: integer
        format: int32
        description: The unique numeric ID for identifying the role.
