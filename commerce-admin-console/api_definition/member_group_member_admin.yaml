swagger: '2.0'
info:
  version: '2.0'
  title: member-group-memberships
consumes:
  - application/json
produces:
  - application/json
paths:
  /member-group-memberships:
    get:
      tags:
        - member-group-memberships
      description: Get a collection of member group memberships.
      operationId: getMemberGroupMemberships
      parameters:
        - name: memberId
          in: query
          description: The user ID or organization ID that is associated to the member group.
          required: false
          type: integer
          format: int64
        - name: memberGroupId
          in: query
          description: The member group ID.
          required: false
          type: integer
          format: int64
        - name: field1
          in: query
          description: The customizable field.
          required: false
          type: string
        - name: exclude
          in: query
          description: 'The member excluded indicator that specifies if the member (user or organization) is to be explicitly included or excluded from the member group. Valid values are 1 to exclude the member from the member group, and 0 to include the member in the member group. A member can belong to a member group implicitly by the conditions of the member group. When evaluating if a member belongs to a member group, explicit exclusion takes precedence, then explicit inclusion, and then finally implicit inclusion.'
          required: false
          type: string
        - name: offset
          in: query
          description: 'The position within the resulting dataset where the query begins returning item records. If the offset is "5", the records that returned begin with the sixth record that matches the query parameters. If the offset is "0", the records that are returned begin with the first record that matches the query parameters.'
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: The maximum number of records to return.
          required: false
          type: integer
          format: int32
        - name: fields
          in: query
          description: 'The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.'
          required: false
          type: string
        - name: expand
          in: query
          description: 'The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.'
          required: false
          type: string
      responses:
        '200':
          description: A collection of member group memberships.
          schema:
            $ref: '#/definitions/MemberGroupMembershipCollection'
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    post:
      tags:
        - member-group-memberships
      description: Create a member group membership.
      operationId: createMemberGroupMembership
      parameters:
        - in: body
          name: MemberGroupMembership
          description: 'A member group membership, which is an association of a member (user or organization) to a member group.'
          required: true
          schema:
            $ref: '#/definitions/MemberGroupMembership'
      responses:
        '201':
          description: The operation was successful.
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
  '/member-group-memberships/memberId:{memberId},memberGroupId:{memberGroupId}':
    get:
      tags:
        - member-group-memberships
      description: Get a member group membership.
      operationId: getMemberGroupMembershipById
      parameters:
        - name: fields
          in: query
          description: 'The comma-separated set of properties to be returned. If no properties are specified, all properties are returned.'
          required: false
          type: string
        - name: expand
          in: query
          description: 'The comma-separated set of related resources referenced in the links to be returned. If no related resources are specified, no related resources are returned.'
          required: false
          type: string
      responses:
        '200':
          description: 'A member group membership, which is an association of a member (user or organization) to a member group.'
          schema:
            $ref: '#/definitions/MemberGroupMembership'
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '404':
          description: The resource was not found.
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    delete:
      tags:
        - member-group-memberships
      description: Delete a member group membership.
      operationId: deleteMemberGroupMembershipById
      parameters: []
      responses:
        '204':
          description: The operation was successful.
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '404':
          description: The resource was not found.
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    patch:
      tags:
        - member-group-memberships
      description: ''
      operationId: updateMemberGroupMembershipById
      parameters:
        - in: body
          name: MemberGroupMembership
          description: 'A member group membership, which is an association of a member (user or organization) to a member group.'
          required: true
          schema:
            $ref: '#/definitions/MemberGroupMembership'
      responses:
        '200':
          description: The operation was successful.
        '400':
          description: There was a client error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
        '404':
          description: The resource was not found.
        '500':
          description: There was a server error.
          schema:
            $ref: '#/definitions/ErrorResponseContainer'
    parameters:
      - name: memberId
        in: path
        description: The user ID or organization ID that is associated to the member group.
        required: true
        type: integer
        format: int64
      - name: memberGroupId
        in: path
        description: The member group ID.
        required: true
        type: integer
        format: int64
definitions:
  Link:
    type: object
    properties:
      href:
        type: string
        format: uri
        description: The URL of the link.
    description: Links to related resources.
  Error:
    type: object
    properties:
      code:
        type: string
        description: The error message code.
      message:
        type: string
        description: The error message.
      messageKey:
        type: string
        description: The error message key.
      messageArguments:
        type: array
        description: The arguments used to construct the error message.
        items:
          type: object
      correlationId:
        type: string
        description: The unique identifier for the request.
      locale:
        type: string
        description: The locale of the error message.
    description: The error message item model.
  ErrorResponseContainer:
    type: object
    properties:
      requestId:
        type: string
        description: The request identifier.
      errors:
        type: array
        description: The errors.
        items:
          $ref: '#/definitions/Error'
    description: The error message model.
  MemberGroupMembership:
    type: object
    properties:
      memberId:
        type: integer
        format: int64
        description: The user ID or organization ID that is associated to the member group.
      memberGroupId:
        type: integer
        format: int64
        description: The member group ID.
      field1:
        type: string
        description: The customizable field.
      exclude:
        type: string
        description: 'The member excluded indicator that specifies if the member (user or organization) is to be explicitly included or excluded from the member group. Valid values are 1 to exclude the member from the member group, and 0 to include the member in the member group. A member can belong to a member group implicitly by the conditions of the member group. When evaluating if a member belongs to a member group, explicit exclusion takes precedence, then explicit inclusion, and then finally implicit inclusion.'
    description: 'A member group membership, which is an association of a member (user or organization) to a member group.'
  MemberGroupMembershipCollection:
    type: object
    properties:
      count:
        type: integer
        format: int64
        description: The total number of items.
      items:
        type: array
        description: The items.
        items:
          $ref: '#/definitions/MemberGroupMembership'
    description: A collection of member group memberships.
